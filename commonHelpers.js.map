{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor((ms % hour) / minute);\n  const seconds = Math.floor((ms % minute) / second);\n    \n  return { days, hours, minutes, seconds };\n}\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n\n  onClose(selectedDates) {\n    if (selectedDates[0] < Date.now()) {\n      iziToast.show({\n        message: 'Please choose a date in the future',\n      });\n        \n      btnStart.disabled = true;\n    } else {\n      btnStart.disabled = false;\n        userSelectedDate = selectedDates[0];\n    }\n  },\n};\n\nconst input = document.querySelector('#datetime-picker');\nconst btnStart = document.querySelector('[data-start]');\nbtnStart.disabled = true;\nlet userSelectedDate;\n\nflatpickr(input, options);\n\nbtnStart.addEventListener('click', () => {\n  const days = document.querySelector('[data-days]');\n  const hours = document.querySelector('[data-hours]');\n  const minutes = document.querySelector('[data-minutes]');\n  const seconds = document.querySelector('[data-seconds]');\n\n  btnStart.disabled = true;\n  input.disabled = true;\n\n  const interval = setInterval(() => {\n    const dif = userSelectedDate -  Date.now();\n\n    if (dif <= 0) {\n      clearInterval(interval);\n      input.disabled = false;\n      btnStart.disabled = false;\n      return;\n    }\n\n    const time = convertMs(dif);\n\n    days.textContent = String(time.days).padStart(2, '0');\n    hours.textContent = String(time.hours).padStart(2, '0');\n    minutes.textContent = String(time.minutes).padStart(2, '0');\n    seconds.textContent = String(time.seconds).padStart(2, '0');\n  }, 1000);\n});"],"names":["convertMs","ms","days","hours","minutes","seconds","options","selectedDates","iziToast","btnStart","userSelectedDate","input","flatpickr","interval","dif","time"],"mappings":"+IAMA,SAASA,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAOH,EAAK,KAAQ,GAAM,EACzCI,EAAU,KAAK,MAAOJ,EAAK,IAAU,GAAM,EAEjD,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,EAAI,KAAK,IAAG,GAC7BC,EAAS,KAAK,CACZ,QAAS,oCACjB,CAAO,EAEDC,EAAS,SAAW,KAEpBA,EAAS,SAAW,GAClBC,EAAmBH,EAAc,CAAC,EAEvC,CACH,EAEMI,EAAQ,SAAS,cAAc,kBAAkB,EACjDF,EAAW,SAAS,cAAc,cAAc,EACtDA,EAAS,SAAW,GACpB,IAAIC,EAEJE,EAAUD,EAAOL,CAAO,EAExBG,EAAS,iBAAiB,QAAS,IAAM,CACvC,MAAMP,EAAO,SAAS,cAAc,aAAa,EAC3CC,EAAQ,SAAS,cAAc,cAAc,EAC7CC,EAAU,SAAS,cAAc,gBAAgB,EACjDC,EAAU,SAAS,cAAc,gBAAgB,EAEvDI,EAAS,SAAW,GACpBE,EAAM,SAAW,GAEjB,MAAME,EAAW,YAAY,IAAM,CACjC,MAAMC,EAAMJ,EAAoB,KAAK,IAAG,EAExC,GAAII,GAAO,EAAG,CACZ,cAAcD,CAAQ,EACtBF,EAAM,SAAW,GACjBF,EAAS,SAAW,GACpB,MACD,CAED,MAAMM,EAAOf,EAAUc,CAAG,EAE1BZ,EAAK,YAAc,OAAOa,EAAK,IAAI,EAAE,SAAS,EAAG,GAAG,EACpDZ,EAAM,YAAc,OAAOY,EAAK,KAAK,EAAE,SAAS,EAAG,GAAG,EACtDX,EAAQ,YAAc,OAAOW,EAAK,OAAO,EAAE,SAAS,EAAG,GAAG,EAC1DV,EAAQ,YAAc,OAAOU,EAAK,OAAO,EAAE,SAAS,EAAG,GAAG,CAC3D,EAAE,GAAI,CACT,CAAC"}